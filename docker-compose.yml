version: '3.7'
services: 
  db-e2e-cloud-storage:
    image: mongo:4.4.1
    container_name: db-e2e-cloud-storage
    volumes: 
      - ./mongo-volume:/data/db
      - ./init-db:/docker-entrypoint-initdb.d
    environment: 
      - MONGO_INITDB_ROOT_USERNAME=mongodb_user
      - MONGO_INITDB_ROOT_PASSWORD=20softsich20
      - MONGO_INITDB_DATABASE=mongodb
    networks: 
      - e2e-cloud-storage-network
    ports: 
      - 27017:27017
  
  backend-e2e-cloud-storage:
    #image: mongo:4.4.1
    build: .
    links:
      - db-e2e-cloud-storage
    depends_on:        
      - s3storage-e2e-cloud-storage
      - db-e2e-cloud-storage
    container_name: backend-e2e-cloud-storage
    environment:
      - DJANGO_SUPERUSER_USERNAME=mongodb_user
      - DJANGO_SUERPUSER_PASSWORD=20softsich20
    networks: 
      - e2e-cloud-storage-network
    ports: 
      - 8080:8080
  
  s3storage-e2e-cloud-storage:
    image: minio/minio:RELEASE.2020-11-10T21-02-24Z
    container_name: s3storage-e2e-cloud-storage
    environment:
      - BUCKET_NAME=e2e-cloud-storage
      - MINIO_ACCESS_KEY=accesskey
      - MINIO_SECRET_KEY=secretkey
    volumes:
      - s3-data-e2e-cloud-storage:/data
    entrypoint: sh
    command: -c 'mkdir -p /data/e2e-cloud-storage && /usr/bin/minio server /data'
    networks:
      - e2e-cloud-storage-network
    ports:
      - 9010:9000

volumes: 
  db-e2e-cloud-storage:
    driver: local
  s3-data-e2e-cloud-storage:
    driver: local

networks: 
  e2e-cloud-storage-network:
    name: e2e-cloud-storage-net
